/*
Hypatia: A realtime malware scanner for Android
Copyleft  (ðŸ„¯) 2025 MaintainTeam Organization

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package us.spotco.malwarescanner;

import android.app.Application;
import android.content.Context;
import android.content.Intent;

import android.widget.TextView;
import androidx.annotation.NonNull;
import java.lang.ref.WeakReference;
import android.util.Log;

public class Hypatia extends Application {
    private WeakReference<MainActivity> mainActivityRef;
    private static Hypatia instance;

    @Override
    public void onCreate() {
        super.onCreate();
        instance = this;
    }

    public static Hypatia getInstance() {
        return instance;
    }

    public void setMainActivity(@NonNull MainActivity activity) {
        mainActivityRef = new WeakReference<>(activity);
        if (activity != null) {
            HypatiaLogger.getInstance().setLogView(activity.getLogView());
        } else {
            Log.e("LoveLaceAV", "COULDN'T START LoveLaceAV LOGGER");
        }
    }

    public void ensureMainActivity() {
        if (mainActivityRef == null || mainActivityRef.get() == null) {
            Intent intent = new Intent(this, MainActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
            startActivity(intent);
        }
    }

    // REVIEW Is it really needed ???
    public static Context getAppContext() {
        return instance.getApplicationContext();
    }
}
