/*
Hypatia: A realtime malware scanner for Android
Copyright (c) 2023 Divested Computing Group

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package us.spotco.malwarescanner;


import android.app.Activity;
import androidx.appcompat.app.AppCompatActivity;
import android.app.AlertDialog;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.ViewGroup;
import android.widget.Toast;

import java.io.File;
import java.util.Objects;

public class NotificationPromptActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Intent intent = getIntent();
        Context context = this;
        switch (Objects.requireNonNull(intent.getAction())) {
            case "us.spotco.malwarescanner.LOOKUP_HASH":
                if (Objects.requireNonNull(intent.getStringExtra("HASH")).length() == 64) {
                    String hashsum = intent.getStringExtra("HASH");
                    AlertDialog lookupDialog = new AlertDialog.Builder(this)
                            .setTitle(R.string.confirm_lookup_title)
                            .setMessage(getString(R.string.confirm_lookup_summary) + "\n>>>" + hashsum.substring(0, 8) + "<<<")
                            .setIcon(android.R.drawable.ic_dialog_alert)
                            .setPositiveButton(android.R.string.yes, (dialog, whichButton) -> {
                                Intent lookupIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.virustotal.com/gui/file/" + hashsum));
                                startActivity(lookupIntent);
                                finish();
                            })
                            .setNegativeButton(android.R.string.no, (dialog, whichButton) -> finish())
                            .create();
                    lookupDialog.setOnDismissListener((dialog) -> finish());
                    lookupDialog.show();
                } else {
                    HypatiaLogger.Log("Invalid hash", LogType.DEBUG);
                    finish();
                }
                break;
            case "us.spotco.malwarescanner.DELETE_FILE":
                if (intent.getPackage() == null || Objects.equals(intent.getPackage(), BuildConfig.APPLICATION_ID)) {
                    File matched = new File(Objects.requireNonNull(intent.getStringExtra("FILE_PATH")));
                    if (matched.exists() && matched.isFile()) {
                        AlertDialog deleteDialog = new AlertDialog.Builder(this)
                                .setTitle(R.string.confirm_delete_title)
                                .setMessage(getString(R.string.confirm_delete_summary) + "\n>>>" + matched.getName() + "<<<")
                                .setIcon(android.R.drawable.ic_dialog_alert)
                                .setPositiveButton(android.R.string.yes, (dialog, whichButton) -> {
                                    if (matched.delete()) {
                                        Toast.makeText(context, getString(R.string.deleted), Toast.LENGTH_SHORT).show();
                                    } else {
                                        Toast.makeText(context, getString(R.string.delete_failed), Toast.LENGTH_SHORT).show();
                                    }
                                    clearNotification(context, intent.getIntExtra("NOTIFICATION_ID", 0));
                                    finish();
                                })
                                .setNegativeButton(android.R.string.no, (dialog, whichButton) -> finish())
                                .create();
                        deleteDialog.setOnDismissListener((dialog) -> finish());
                        deleteDialog.show();
                    } else {
                        finish();
                    }
                } else {
                    HypatiaLogger.Log("Ignoring DELETE_FILE request from external package: " + intent.getPackage(), LogType.DEBUG);
                    finish();
                }
                break;
            case "us.spotco.malwarescanner.UNINSTALL_APP":
                if (intent.getPackage() == null || Objects.equals(intent.getPackage(), BuildConfig.APPLICATION_ID)) {
                    if (intent.getStringExtra("FILE_PATH") != null) {
                        boolean notFound = true;
                        for (ApplicationInfo packageInfo : getPackageManager().getInstalledApplications(PackageManager.GET_META_DATA)) {
                            if (packageInfo.sourceDir.equals(intent.getStringExtra("FILE_PATH"))) {
                                notFound = false;
                                Uri packageUri = Uri.parse("package:" + packageInfo.packageName);
                                Intent uninstallIntent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE, packageUri);
                                startActivity(uninstallIntent);
                                clearNotification(context, intent.getIntExtra("NOTIFICATION_ID", 0));
                                finish();
                            }
                        }
                        if (notFound) {
                            finish();
                        }
                    } else {
                        finish();
                    }
                } else {
                    HypatiaLogger.Log("Ignoring DELETE_FILE request from external package: " + intent.getPackage(), LogType.DEBUG);
                    finish();
                }
                break;
            case "us.spotco.malwarescanner.IGNORE_DETECTION":
                Toast.makeText(context, getString(R.string.ignored), Toast.LENGTH_SHORT).show();
                clearNotification(context, intent.getIntExtra("NOTIFICATION_ID", 0));
                finish();
                break;
        }
    }

    private static void clearNotification(Context context, int id) {
        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
        if (id != 0) {
            notificationManager.cancel(id);
            HypatiaLogger.Log("Canceled notification", LogType.DEBUG);
        }
    }

    @Override
    public void onBackPressed() {
        finish();
    }
}
